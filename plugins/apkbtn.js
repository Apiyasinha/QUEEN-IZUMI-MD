const config = require('../config')
const { cmd, commands } = require('../command')
var os = require('os')

var tmsg =''
if(config.LANG === 'SI') tmsg = '‡∂ë‡∂∫ Bot link ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ô‡∂∫‡∑í.'
else tmsg = "It gives bot link."


cmd({
    pattern: "apk",
    use: '.apk whatsapp',
    react: "üéß",
    desc: descs,
    category: "download",
    filename: __filename

},

async(conn, mek, m,{from, prefix, l, quoted, body, isCmd, command, args, q, isGroup, sender, senderNumber, botNumber2, botNumber, pushname, isMe, isOwner, groupMetadata, groupName, participants, groupAdmins, isBotAdmins, isAdmins, reply}) => {
try{
if (!q) return await reply(imgmsg)
if(isUrl(q) && !ytreg(q)) return await reply(imgmsg)
if(isUrl(q) && q.includes('/shorts')){let dat = `‚îå‚îÄ‚îÄ‚îÄ[üßö Ôº±ÔºµÔº•Ôº•ÔºÆ -Ôº©Ôº∫ÔºµÔº≠Ôº© - Ôº≠Ôº§ üßö]

  *SELECT TYPE*`

const sections = [
    {
	title: "",
	rows: [
	    {title: "1", rowId: prefix + 'apk1 ' + q , description: '·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö ·¥Ä·¥ò·¥ã'},
            {title: "3", rowId: prefix + 'apkinfo ' + q , description: 'Íú±·¥á·¥á ·¥Ä·¥ò·¥ã …™…¥Íú∞·¥è'} ,
	]
    } 
]
const listMessage = {
  text: dat,
  footer: config.FOOTER,
  buttonText: "üî¢ Reply below number,",
  sections,
  contextInfo: {
				
				externalAdReply: { 
					title: 'üßö Ôº±ÔºµÔº•Ôº•ÔºÆ -Ôº©Ôº∫ÔºµÔº≠Ôº© - Ôº≠Ôº§ üßö',
					body: '·¥Ä…¥ ·¥úÍú±·¥á Ä  ô·¥è·¥õ Íú∞·¥è Ä ·¥° ú·¥Ä·¥õÍú±·¥Ä·¥ò·¥ò',
					mediaType: 1,
					sourceUrl: "" ,
          thumbnailUrl: 'https://telegra.ph/file/ba8ea739e63bf28c30b37.jpg' ,
					renderLargerThumbnail: false,
          showAdAttribution: true
         }}	
}

return await conn.replyList(from, listMessage ,{ quoted : mek }) 				      
}
if(ytreg(q)){let dat = `[üßö Ôº±ÔºµÔº•Ôº•ÔºÆ -Ôº©Ôº∫ÔºµÔº≠Ôº© - Ôº≠Ôº§ üßö]

*SELECT SONG TYPE*`
const sections = [
    {
	title: "",
	rows: [
	    {title: "1", rowId: prefix + 'apk1 ' + q , description: '·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö ·¥Ä·¥ò·¥ã'},
            {title: "3", rowId: prefix + 'apkinfo ' + q , description: 'Íú±·¥á·¥á ·¥Ä·¥ò·¥ã …™…¥Íú∞·¥è'} ,

	]
    } 
]
const listMessage = {
  text: dat,
  footer: config.FOOTER,
  buttonText: "üî¢ Reply below number,",
  sections }	

	     
return await conn.replyList(from, listMessage ,{ quoted : mek }) 

}
let yts = require("yt-search")
let search = await yts(q)
let anu = search.videos[0]
const cap = `[üßö Ôº±ÔºµÔº•Ôº•ÔºÆ -Ôº©Ôº∫ÔºµÔº≠Ôº© - Ôº≠Ôº§ üßö]`

const sections = [
    {
	title: "",
	rows: [
	    {title: "1", rowId: prefix + 'apk1 ' + anu.url , description: '·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö ·¥Ä·¥ò·¥ã'},
            {title: "3", rowId: prefix + 'apkinfo ' + anu.url , description: 'Íú±·¥á·¥á ·¥Ä·¥ò·¥ã …™…¥Íú∞·¥è'} ,

	]
    } 
]
const listMessage = {
  image: {url: anu.thumbnail},
  caption: cap,
  footer: config.FOOTER,
  buttonText: "üî¢ Reply below number,",
  sections,
  contextInfo: {
				
				externalAdReply: { 
					title: 'üßö Ôº±ÔºµÔº•Ôº•ÔºÆ -Ôº©Ôº∫ÔºµÔº≠Ôº© - Ôº≠Ôº§ üßö',
					body: '·¥Ä…¥ ·¥úÍú±·¥á Ä  ô·¥è·¥õ Íú∞·¥è Ä ·¥° ú·¥Ä·¥õÍú±·¥Ä·¥ò·¥ò',
					mediaType: 1,
					sourceUrl: "" ,
          thumbnailUrl: 'https://telegra.ph/file/ba8ea739e63bf28c30b37.jpg' ,
					renderLargerThumbnail: false,
          showAdAttribution: true
         }}	
}

await conn.replyList(from, listMessage ,{ quoted : mek }) 

} catch (e) {
  reply(N_FOUND)
  l(e)
}
})
